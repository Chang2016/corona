/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package corona

fun main(args: Array<String>) {
    val michaelState: InfectionState  = InfectionState(false, false)
    val michael: Person = Person("Michael", 45, michaelState)

    val borisState: InfectionState  = InfectionState(true, false)
    val boris: Person = Person("Boris", 55, borisState)
    println(findOldest(michael, boris))
    //val personList = arrayListOf(michael, boris)
}

data class Person(val name: String,
                  val age: Int,
                  var infectionState: InfectionState)

data class InfectionState(val infected: Boolean,
                          val antiBody: Boolean)

//Funktion mit expression body also ohne geschweifte Klammern, return type ist Int wegen type inference
fun findOldest(a: Person, b: Person) = if(a.age > b.age) a else b

//Funktion mit block Body return type wird am Ende explizit angegeben
/*fun findInfected(persons: Array<Person>) : Array<Person> {
    val infectedPersons = arrayListOf()
    //if()
    return persons;
}*/


